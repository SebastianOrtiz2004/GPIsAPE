name: CI

on:
  push:
    branches: [ "main", "develop", "master" ]
  pull_request:

jobs:
  build-test-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Frontend
      - name: Install Frontend
        working-directory: frontend
        run: npm ci

      - name: Lint Frontend
        working-directory: frontend
        run: npm run lint

      - name: Test Frontend (unit)
        working-directory: frontend
        run: npm test -- --coverage

      - name: E2E Frontend (Cypress)
        working-directory: frontend
        run: |
          npm run dev &
          npx wait-on http://localhost:5173 --timeout 30000
          npx cypress run --browser chrome --headless
          pkill -f "vite" || true

      # Backend
      - name: Install Backend
        working-directory: backend
        run: npm ci

      - name: Lint Backend
        working-directory: backend
        run: npm run lint

      - name: Test Backend (unit)
        working-directory: backend
        run: npm test -- --coverage

      - name: Test Backend (integration)
        working-directory: backend
        run: npm run test:int

  quality-security:
    runs-on: ubuntu-latest
    needs: build-test-lint
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: SonarQube Scan (self-hosted)
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -z "$SONAR_HOST_URL" ] || [ -z "$SONAR_TOKEN" ]; then
            echo "⚠️ SonarQube secrets no configurados. Saltando análisis de calidad."
            exit 0
          fi
          npm i -D sonarqube-scanner
          echo "sonar.projectKey=proyecto-ci" > sonar-project.properties
          echo "sonar.host.url=${SONAR_HOST_URL}" >> sonar-project.properties
          echo "sonar.login=${SONAR_TOKEN}" >> sonar-project.properties
          echo "sonar.sources=frontend/src,backend/src" >> sonar-project.properties
          echo "sonar.tests=frontend/src,backend/tests" >> sonar-project.properties
          npx sonar-scanner

      - name: Security Analysis Note
        run: |
          echo "Para análisis de seguridad con ZAP:"
          echo "1. Usar ZAP GUI para análisis interactivo"
          echo "2. O configurar ZAP en modo headless para CI/CD"
          echo "3. Para JMeter: usar GUI o configurar en modo headless"
